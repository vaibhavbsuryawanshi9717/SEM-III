     1                                  section .data
     2 00000000 4164646974696F6E20-     	msg db "Addition is %d",10,0
     2 00000009 69732025640A00     
     3 00000010 456E74657220746865-     	msg1 db "Enter the value of n:",0
     3 00000019 2076616C7565206F66-
     3 00000022 206E3A00           
     4 00000026 256400                  	acc db "%d",0
     5                                  section .bss
     6 00000000 <res 00000004>          	n resd 1
     7 00000004 <res 00000190>          	arr resd 100
     8 00000194 <res 00000004>          	ip resd 1
     9 00000198 <res 00000004>          	sum resd 1
    10                                  section .text
    11                                  	global main
    12                                  	extern printf,scanf
    13                                  main:
    14 00000000 68[10000000]            	push msg1
    15 00000005 E8(00000000)            	call printf
    16 0000000A 83C404                  	add esp,4
    17 0000000D 68[00000000]            	push n
    18 00000012 68[26000000]            	push acc
    19 00000017 E8(00000000)            	call scanf
    20 0000001C 83C408                  	add esp,8
    21                                  	
    22 0000001F 31C9                    	xor ecx,ecx
    23 00000021 31F6                    	xor esi,esi
    24                                  loop:
    25 00000023 BE[04000000]            	mov esi,arr
    26 00000028 3B0D[00000000]          	cmp ecx,dword[n]
    27 0000002E 741C                    	je calculate
    28 00000030 B804000000              	mov eax,4
    29 00000035 F7E1                    	mul ecx
    30 00000037 01C6                    	add esi,eax
    31 00000039 51                      	push ecx
    32 0000003A 56                      	push esi
    33 0000003B 68[26000000]            	push acc
    34 00000040 E8(00000000)            	call scanf
    35 00000045 83C408                  	add esp,8
    36 00000048 59                      	pop ecx
    37 00000049 41                      	inc ecx
    38 0000004A EBD7                    	jmp loop
    39                                  	
    40                                  calculate:
    41 0000004C 8B1D[00000000]          	mov ebx,dword[n]
    42 00000052 31C9                    	xor ecx,ecx
    43 00000054 31FF                    	xor edi,edi
    44                                  
    45                                  again:
    46 00000056 BE[04000000]            	mov esi,arr
    47 0000005B B804000000              	mov eax,4
    48 00000060 F7E1                    	mul ecx
    49 00000062 01C6                    	add esi,eax
    50 00000064 033E                    	add edi,dword[esi]    			
    51 00000066 41                      	inc ecx
    52 00000067 4B                      	dec ebx
    53 00000068 83FB00                  	cmp ebx,0
    54 0000006B 75E9                    	jne again
    55                                  	
    56                                  end:
    57 0000006D 57                      	push edi
    58 0000006E 68[00000000]            	push msg
    59 00000073 E8(00000000)            	call printf
    60 00000078 83C408                  	add esp,8
